====================================================== system under test
ChatServer.main("2")+ChatClient.main()+ChatClient.main()

====================================================== search started: 4/25/19 8:48 PM

====================================================== error 1
gov.nasa.jpf.vm.NoUncaughtExceptionsProperty
java.lang.AssertionError
	at ChatServer.<init>(ChatServer.java:82)
	at ChatServer.main(ChatServer.java:97)


====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"ROOT" ,1/3,isCascaded:false}
      [3168 insn w/o sources]
  ChatServer.java:62             : public class ChatServer {
      [2 insn w/o sources]
  ChatServer.java:62             : public class ChatServer {
  ChatServer.java:1              : import java.io.BufferedReader;
      [1 insn w/o sources]
  ChatServer.java:94             : if (args.length == 0) {
  ChatServer.java:97             : new ChatServer(Integer.parseInt(args[0]));
      [2 insn w/o sources]
  ChatServer.java:97             : new ChatServer(Integer.parseInt(args[0]));
  ChatServer.java:66             : public ChatServer(int maxServ) {
      [1 insn w/o sources]
  ChatServer.java:63             : HashMap<Integer, Worker> workers = new HashMap<>();
      [10 insn w/o sources]
  ChatServer.java:63             : HashMap<Integer, Worker> workers = new HashMap<>();
  ChatServer.java:64             : int n = 0;
  ChatServer.java:67             : int port = 4444;
  ChatServer.java:68             : boolean init = true;
  ChatServer.java:70             : ServerSocket servsock = null;
  ChatServer.java:72             : servsock = new ServerSocket(port);
      [81 insn w/o sources]
  ChatServer.java:72             : servsock = new ServerSocket(port);
  ChatServer.java:73             : while (maxServ-- != 0) {
  ChatServer.java:74             : sock = servsock.accept();
      [141 insn w/o sources]
------------------------------------------------------ transition #1 thread: 1
nas.java.net.choice.NasThreadChoice {id:"BLOCKING_ACCEPT" ,1/2,isCascaded:false}
      [3168 insn w/o sources]
  ChatClient.java:13             : static int currID = 0;
  ChatClient.java:1              : /* $Id: ChatClient.java 723 2009-09-24 07:48:58Z cartho $ */
      [1 insn w/o sources]
  ChatClient.java:16             : new ChatClient().exec();
  ChatClient.java:19             : public ChatClient() {
      [1 insn w/o sources]
  ChatClient.java:20             : synchronized(getClass()) {
      [2 insn w/o sources]
  ChatClient.java:20             : synchronized(getClass()) {
  ChatClient.java:21             : id = currID++;
  ChatClient.java:22             : }
  ChatClient.java:23             : }
  ChatClient.java:16             : new ChatClient().exec();
  ChatClient.java:27             : Socket socket = new Socket();
      [10 insn w/o sources]
  ChatClient.java:27             : Socket socket = new Socket();
      [116 insn w/o sources]
  ChatClient.java:27             : Socket socket = new Socket();
  ChatClient.java:28             : InetSocketAddress addr = new InetSocketAddress("localhost", 4444);
      [20 insn w/o sources]
  ChatClient.java:28             : InetSocketAddress addr = new InetSocketAddress("localhost", 4444);
  ChatClient.java:29             : socket.connect(addr);
      [23 insn w/o sources]
------------------------------------------------------ transition #2 thread: 0
nas.java.net.choice.NasThreadChoice {id:"CONNECT" ,1/3,isCascaded:false}
      [3 insn w/o sources]
  ChatServer.java:74             : sock = servsock.accept();
  ChatServer.java:75             : Worker worker = null;
  ChatServer.java:77             : worker = new Worker(sock, this);
      [1 insn w/o sources]
  ChatServer.java:10             : class Worker implements Runnable {
      [2 insn w/o sources]
  ChatServer.java:10             : class Worker implements Runnable {
  ChatServer.java:1              : import java.io.BufferedReader;
  ChatServer.java:77             : worker = new Worker(sock, this);
  ChatServer.java:17             : public Worker(Socket s, ChatServer cs) throws IOException{
      [1 insn w/o sources]
  ChatServer.java:18             : chatServer = cs;
  ChatServer.java:19             : sock = s;
  ChatServer.java:21             : if(Verify.getBoolean()) {
      [1 insn w/o sources]
------------------------------------------------------ transition #3 thread: 0
gov.nasa.jpf.vm.BooleanChoiceGenerator[[id="verifyGetBoolean",isCascaded:false,{>false,true}]
      [2 insn w/o sources]
  ChatServer.java:21             : if(Verify.getBoolean()) {
  ChatServer.java:24             : out = new PrintWriter(sock.getOutputStream(), true);
      [29 insn w/o sources]
  ChatServer.java:24             : out = new PrintWriter(sock.getOutputStream(), true);
      [270 insn w/o sources]
  ChatServer.java:24             : out = new PrintWriter(sock.getOutputStream(), true);
  ChatServer.java:25             : in = new BufferedReader(new
      [7 insn w/o sources]
  ChatServer.java:25             : in = new BufferedReader(new
      [8 insn w/o sources]
  ChatServer.java:25             : in = new BufferedReader(new
  ChatServer.java:26             : InputStreamReader(sock.getInputStream()));
      [29 insn w/o sources]
  ChatServer.java:26             : InputStreamReader(sock.getInputStream()));
      [23 insn w/o sources]
  ChatServer.java:26             : InputStreamReader(sock.getInputStream()));
      [48 insn w/o sources]
  ChatServer.java:26             : InputStreamReader(sock.getInputStream()));
  ChatServer.java:30             : }
  ChatServer.java:31             : }
  ChatServer.java:77             : worker = new Worker(sock, this);
  ChatServer.java:80             : }
  ChatServer.java:81             : if(init){
  ChatServer.java:82             : assert(false);
      [24 insn w/o sources]

====================================================== snapshot #1
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at ChatServer.<init>(ChatServer.java:82)
	at ChatServer.main(ChatServer.java:97)

thread gov.nasa.jpf.FinalizerThread:{id:3,name:finalizer,status:WAITING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  waiting on: java.lang.Object@c7
  call stack:

thread java.lang.Thread:{id:1,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at java.net.Socket.connect(Socket.java)
	at java.net.Socket.connect(Socket.java:77)
	at java.net.Socket.connect(Socket.java:70)
	at ChatClient.exec(ChatClient.java:29)
	at ChatClient.main(ChatClient.java:16)

thread gov.nasa.jpf.FinalizerThread:{id:4,name:finalizer,status:WAITING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  waiting on: java.lang.Object@18c
  call stack:

thread java.lang.Thread:{id:2,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:

thread gov.nasa.jpf.FinalizerThread:{id:5,name:finalizer,status:WAITING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  waiting on: java.lang.Object@251
  call stack:


====================================================== results
error #1: gov.nasa.jpf.vm.NoUncaughtExceptionsProperty "java.lang.AssertionError  at ChatServer.<init>(Cha..."

====================================================== statistics
elapsed time:       00:00:00
states:             new=4,visited=0,backtracked=0,end=0
search:             maxDepth=4,constraints=0
choice generators:  thread=3 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=1
heap:               new=1051,released=7,maxLive=973,gcCycles=3
instructions:       7337
max memory:         88MB
loaded code:        classes=88,methods=3764

====================================================== search finished: 4/25/19 8:48 PM
